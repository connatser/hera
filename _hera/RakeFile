desc "Hera - One stop for a static blog."

task :Hera => [:systems_check] do

end

#Asks the user for a basic systems check of Ruby and Ruby Gems
task :systems_check do
  	STDOUT.puts "## Can we check your system for Ruby and Ruby Gems? (y/n)"
  
  	input = STDIN.gets.strip
  
  	if input == 'y'
    	Rake::Task["ruby:check_ruby"].invoke
  	else
		Rake::Task["Hera_aborted"].invoke
  	end
end


namespace :ruby do

	#Start by checking if the system has Ruby and Ruby Gem installed
	task :check_ruby do
  		puts "## let's start this off by checking for Ruby"
  
  		if system "ruby --version"
			puts "## Ruby is installed."
    		Rake::Task["ruby:check_gem"].invoke 
  		else
    		puts "## Let's check for Ruby Gem."  
    		Rake::Task["ruby:ruby_not_detected"].invoke  
  		end
	end

	#Stops Hera set up because Ruby is not detected
	task :ruby_not_detected do
  		puts "## Please install Ruby and run this install again."
  		puts "## More information can be found at http://www.ruby-lang.org/en/"
		puts "## You should also install ruby gems."
		puts "## More information can be found at http://rubygems.org/pages/download"
	end

	task :check_gem do
  		if system "gem --version"
    		puts "## Ruby Gems is installed."
			Rake::Task["jekyll:install_jekyll"].invoke
  		else
    		puts "Ruby Gems is not installed."
			Rake::Task["ruby:rubygems_not_detected"].invoke
  		end
	end

	#Stops Hera set up because Ruby Gems is not detected
	task :rubygems_not_detected do
  		puts "## Please install Ruby Gems and run this install again."
  		puts "## More information can be found at http://rubygems.org/pages/download"
	end
end


namespace :jekyll do

	task :install_jekyll => :gem_jekyll do
		puts "## Jekyll installed."
		Rake::Task["haml:install_haml"].invoke
	end
	
	task :gem_jekyll do
		puts "## Installing Jekyll."
		system "gem install jekyll"
	end
	
	task :abort do
	end
end


namespace :haml do

	task :install_haml => :gem_haml do
		puts "## Haml installed."
		Rake::Task["sass:install_sass"].invoke
	end

	task :gem_haml do
		puts "## Installing Haml."
		system "gem install haml"
	end

	task :abort do
	end
end


namespace :sass do

	task :install_sass => :gem_sass do
		puts "## Sass installed."
		Rake::Task["jammit:install_jammit"].invoke
	end

	task :gem_sass do
		puts "## Installing Sass."
		system "gem install sass"
	end

	task :abort do
	end
end


namespace :jammit do
	task :install_jammit => :gem_jammit do
		puts "## Jammit installed."
		Rake::Task["guard:install_guard"].invoke
	end

	task :gem_jammit do
		puts "## Installing Jammit."
		system "gem install jammit"
	end

	task :abort do
	end
end


namespace :guard do
	task :install_guard => :gem_guard do
		puts "## Guard installed."
		Rake::Task["guard_rake:install_guard_rake"].invoke
	end

	task :gem_guard do
		puts "## Installing Guard."
		system "gem install guard"
	end

	task :abort do
	end
end


namespace :guard_rake do
	task :install_guard_rake => :gem_guard_rake do
		puts "## Guard-Rake installed."
		Rake::Task["rb_event:install_rb_fsevent"].invoke
	end

	task :gem_guard_rake do
		puts "## Installing Guard-Rake."
		system "gem install guard-rake"
	end

	task :abort do
	end
end


namespace :rb_event do
	task :install_rb_fsevent => :gem_rb_fsevent do
		puts "## rb-fsevent for Growl installed."
		Rake::Task["growl_notify:install_growl_notify"].invoke
	end

	task :gem_rb_fsevent do
		puts "## Installing rb-fsevent for Growl."
		system "gem install rb-fsevent"
	end

	task :abort do
	end
end


namespace :growl_notify do
	task :install_growl_notify => :gem_growl_notify do
		puts "## Growl-Notify installed."
	end

	task :gem_growl_notify do
		puts "## Installing Growl-Notify."
		system "gem install growl_notify"
	end

	task :abort do
	end
end


task :Hera_aborted do
  	puts "Thank you, please shop again."
end